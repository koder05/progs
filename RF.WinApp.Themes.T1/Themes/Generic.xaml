<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RF.WinApp;assembly=RF.WinApp.Infrastructure"
>

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/RF.WinApp.Infrastructure;component/Themes/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="CrudControlPanelColor" Color="LightGray"  />
    <SolidColorBrush x:Key="MenuItemSelectionFill" Color="LightGray"  />
    <SolidColorBrush x:Key="MouseOverListBrush" Color="LightGray"  />
    <SolidColorBrush x:Key="SelectedItemListBrush" Color="Gray"  />

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="Border" BorderThickness="1" Background="White" BorderBrush="Gray">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="Border" BorderThickness="1" Background="White" BorderBrush="Gray">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ButtonBase}, ResourceId=InThemeButtonBaseTemplate}" TargetType="{x:Type ButtonBase}">
        <Border x:Name="Border" BorderThickness="1" Background="LightGray" BorderBrush="Gray" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="White" />
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderThickness" Value="2" TargetName="Border"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}" TargetType="{x:Type ContentControl}">
        <Border Background="White" BorderBrush="#FF959595" BorderThickness="1">
            <Grid>
                <Rectangle Fill="White" HorizontalAlignment="Left" Width="28" Margin="2"/>
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#E2E3E3"/>
                <ContentPresenter Grid.ColumnSpan="2" Margin="1,0"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg" Fill="{TemplateBinding MenuItem.Background}" Stroke="{TemplateBinding MenuItem.BorderBrush}" StrokeThickness="1" />
            <Grid Height="22">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Border x:Name="GlyphPanel" Margin="1" Visibility="Hidden" Width="22" Height="22">
                    <Ellipse Width="6" Height="6" Stroke="Black" StrokeThickness="1" Fill="Black"  />
                </Border>
                <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding MenuItem.Padding}" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding MenuItem.Padding}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource MenuItemSelectionFill}"/>
                <Setter TargetName="Bg" Property="Stroke" Value="{StaticResource MenuItemSelectionFill}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg" Fill="{TemplateBinding MenuItem.Background}" Stroke="{TemplateBinding MenuItem.BorderBrush}" StrokeThickness="1" />
            <Grid Height="22">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding MenuItem.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding MenuItem.Padding}" Visibility="Collapsed"/>
                <Path Grid.Column="5" VerticalAlignment="Center" Margin="4,0,0,0" Fill="{TemplateBinding MenuItem.Foreground}" Data="{StaticResource RightArrow}"/>
            </Grid>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Right" VerticalOffset="1" HorizontalOffset="-1" 
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <ContentControl Name="SubMenuBorder" Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}" IsTabStop="false">
                    <ScrollViewer Name="SubMenuScrollViewer" CanContentScroll="true" MaxHeight="400"
                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                        <Grid RenderOptions.ClearTypeHint="Enabled">
                            <ItemsPresenter Name="ItemsPresenter" Margin="2" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.IsSharedSizeScope="true"/>
                        </Grid>
                    </ScrollViewer>
                </ContentControl>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bg" Property="Fill" Value="{StaticResource MenuItemSelectionFill}"/>
                <Setter TargetName="Bg" Property="Stroke" Value="{StaticResource MenuItemSelectionFill}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ContextMenu}, ResourceId=SplBtn_ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Border Name="ContextMenuBorder" Background="White" BorderBrush="#FF959595" BorderThickness="1">
            <Grid>
                <Rectangle Fill="White" HorizontalAlignment="Left" Width="28" Margin="2" />
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#E2E3E3"/>
                <ScrollViewer Name="ContextMenuScrollViewer" CanContentScroll="true" Grid.ColumnSpan="2" Margin="1,0"
                                              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                    <Grid RenderOptions.ClearTypeHint="Enabled">
                        <ItemsPresenter Name="ItemsPresenter" Margin="2" Grid.IsSharedSizeScope="true"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ScrollViewer>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="DataGridColumnHeader_SortPathStyle" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,2,7,0"/>
        <Setter Property="Visibility" Value="Hidden"/>
    </Style>

    <Style x:Key="DataGridColumnHeader_MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#EEEEEE"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
    </Style>
    <SolidColorBrush Color="White" x:Key="DataGridColumnHeader_PART_LeftHeaderGripperColor" />
    <SolidColorBrush Color="LightGray" x:Key="DataGridColumnHeader_PART_RightHeaderGripperColor" />

    <Style x:Key="ColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Thumb}">
                            <Setter Property="FrameworkElement.Width" Value="1"/>
                            <Setter Property="FrameworkElement.Cursor" Value="SizeWE"/>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Border Background="{TemplateBinding Background}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="MainBorder" Background="#EEEEEE" BorderBrush="LightGray" BorderThickness="0,1,0,1">
                            <Grid>
                                <ContentPresenter Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" 
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Grid>
                        </Border>
                        <Path Name="UpArrow" Style="{StaticResource DataGridColumnHeader_SortPathStyle}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="7,0"/>
                                        <LineSegment Point="3.5,6"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Name="DownArrow" Style="{StaticResource DataGridColumnHeader_SortPathStyle}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,6">
                                        <LineSegment Point="7,6"/>
                                        <LineSegment Point="3.5,0"/>
                                        <LineSegment Point="0,6"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Thumb Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Background="{StaticResource DataGridColumnHeader_PART_LeftHeaderGripperColor}"/>
                        <Thumb Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Background="{StaticResource DataGridColumnHeader_PART_RightHeaderGripperColor}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Thumb}">
                            <Setter Property="FrameworkElement.Height" Value="1"/>
                            <Setter Property="FrameworkElement.Cursor" Value="SizeNS"/>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Border Background="{TemplateBinding Background}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="SelectPathStyle" TargetType="{x:Type Path}">
                            <Setter Property="Fill" Value="Black"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Visibility" Value="Hidden"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="MainBorder" Background="#EEEEEE" BorderBrush="LightGray" BorderThickness="1,0,1,0" />
                        <Path Name="Arrow" Style="{StaticResource SelectPathStyle}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="6,4"/>
                                        <LineSegment Point="0,8"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Thumb Name="PART_TopHeaderGripper" VerticalAlignment="Top" Background="White"/>
                        <Thumb Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Background="LightGray"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRowSelected" Value="True">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},Path=Item.IsEditing}" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="Red"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Validation_ErrorTemplate" TargetType="{x:Type Control}">
        <DockPanel LastChildFill="False">
            <Image x:Name="ErrorSign" DockPanel.Dock="Right" Margin="2,0,0,0" Source="/RF.WinApp;component/Img/error.png" Width="14" Height="14" 
                           ToolTip="{Binding ElementName=MyAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"  />
            <Grid>
                <Border Background="Transparent" BorderBrush="Red" BorderThickness="1" IsHitTestVisible="False"  
                        Width="{Binding ElementName=MyAdorner, Path=AdornedElement.Width}" 
                        Height="{Binding ElementName=MyAdorner, Path=AdornedElement.Height}" />
                <local:ShadedAdornedElementPlaceholder x:Name="MyAdorner" />
            </Grid>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger SourceName="MyAdorner" Property="local:ActionBlock.IsShaded" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ToggleButton}, ResourceId=ControlBoxToggleButton}" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{TemplateBinding Width}" />
                <ColumnDefinition Width="24" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Background="White" BorderBrush="Gray" BorderThickness="1" HorizontalAlignment="Stretch" />
            <Border x:Name="Btn" BorderBrush="Gray" Grid.Column="1" BorderThickness="0,1,1,1">
                <Path x:Name="Arrow" Grid.Column="1" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1,0,0,0" Data="M -2 0 L 2 4 L 6 0 Z"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Btn" Property="Background" Value="Gray" />
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ToggleButton}, ResourceId=ControlBoxToggleButton2}" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{TemplateBinding Width}" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Background="White" BorderBrush="Gray" BorderThickness="1" HorizontalAlignment="Stretch" />
            <Border x:Name="Btn" BorderBrush="Gray" Grid.Column="1" BorderThickness="0,1,1,1" Background="White">
                <Path x:Name="Arrow" Grid.Column="1" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1,0,0,0" Data="M -2 0 L 2 4 L 6 0 Z"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Btn" Property="Background" Value="Gray" />
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Control_ExtensionButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Border x:Name="Btn" BorderBrush="Gray" Grid.Column="1" BorderThickness="0,1,1,1" Background="White">
                <Path x:Name="Arrow" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6,0,0,1" Data="M -2 0 L 2 4 L 6 0 Z">
                    <Path.LayoutTransform>
                        <RotateTransform Angle="-90" />
                    </Path.LayoutTransform>
                </Path>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Btn" Property="Background" Value="Gray" />
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledBorderBrushComboBox}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:ActionTextBox}" x:Key="{x:Type local:ActionTextBox}">
        <Setter Property="Height" Value="18"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ActionTextBox}">
                    <Grid Width="{TemplateBinding Width}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="ExtensionButton" Focusable="false" ClickMode="Press" Width="30"
                            Template="{StaticResource Control_ExtensionButton}" Grid.ColumnSpan="2" HorizontalAlignment="Right" Command="{TemplateBinding Action}" />
                        <Border BorderThickness="1" BorderBrush="Gray" Background="White">
                            <ScrollViewer Margin="2,1,2,0" x:Name="PART_ContentHost"></ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="DropDownPopupBorder">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type ButtonBase}" x:Key="ToolBarButtonBaseStyle">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="Transparent" Padding="1" Margin="1">
                        <Grid>
                            <ContentPresenter Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Stretch" RecognizesAccessKey="True"   />
                            <Border x:Name="DisableCouple" Background="#777777" Opacity="0.5" Visibility="Hidden"  />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="White" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="DisableCouple" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="local:ActionBlock.IsOpened" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="White" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
