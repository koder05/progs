<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="RF.WinApp.CrudCCLookup" x:ClassModifier="public"
                    xmlns:vc="clr-namespace:RF.WinApp;assembly=RF.WinApp.Infrastructure" 
                    xmlns:vc2="clr-namespace:RF.WinApp">

    <vc2:Object2ModelConverter x:Key="Object2ModelConverter"/>

    <ControlTemplate x:Key="ValidationErrorTemplate" TargetType="{x:Type Control}">
        <DockPanel LastChildFill="False">
            <Image DockPanel.Dock="Right" Margin="2,0,0,0" Source="/RF.WinApp;component/Img/error.png" Width="14" Height="14" ToolTip="{Binding ElementName=MyAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
            <Border BorderBrush="Red" BorderThickness="1">
                <AdornedElementPlaceholder Name="MyAdorner" />
            </Border>
        </DockPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type Button}">
        <Border x:Name="Border" BorderThickness="1,0,0,0" Background="White" BorderBrush="Gray" Width="24">
            <Path x:Name="Arrow" Fill="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M -2 0 L 2 4 L 6 0 Z"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Gray" />
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#c2c2c2" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#FF919191" />
                <Setter Property="Foreground" Value="#aaaaaa"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#FF919191" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ColumnHeaderInLookup" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#656A64"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Thumb}">
                            <Setter Property="FrameworkElement.Width" Value="1"/>
                            <Setter Property="FrameworkElement.Cursor" Value="SizeWE"/>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Border Background="{TemplateBinding Background}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="SortPathStyle" TargetType="{x:Type Path}">
                            <Setter Property="Fill" Value="Green"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="0,2,7,0"/>
                            <Setter Property="Visibility" Value="Hidden"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="MainBorder" Background="#EBFFE7">
                            <Grid>
                                <ContentPresenter Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" 
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            </Grid>
                        </Border>
                        <Path Name="UpArrow" Style="{StaticResource SortPathStyle}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="7,0"/>
                                        <LineSegment Point="3.5,6"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Name="DownArrow" Style="{StaticResource SortPathStyle}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,6">
                                        <LineSegment Point="7,6"/>
                                        <LineSegment Point="3.5,0"/>
                                        <LineSegment Point="0,6"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Thumb Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Background="#F7FEF7"/>
                        <Thumb Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Background="#C6D7C5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Width" Value="0"/>
        <Setter Property="Template" Value="{x:Null}" />
    </Style>

    <Style x:Key="CellInLookup" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.FontFamily" Value="Arial"/>
        <Setter Property="TextBlock.FontSize" Value="10"/>
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextBlock.Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" 
                    BorderBrush="{TemplateBinding Border.BorderBrush}" 
                    Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                        <ContentPresenter VerticalAlignment="Center"
                                  Content="{TemplateBinding ContentControl.Content}" 
                                  Margin="1,0,0,0"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#E39E11" />
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#FEECC8" />
            </Trigger>
            <DataTrigger Value="0" Binding="{Binding Path=ID}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ItemInLookup" TargetType="{x:Type DataGridRow}">
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="White"/>
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#EFF3EF"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FAE9C4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type vc:CrudCC}" x:Key="Lookup">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF688CAF"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource RowHeader}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderInLookup}"/>
        <Setter Property="CellStyle" Value="{StaticResource CellInLookup}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ItemInLookup}"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="GridLinesVisibility" Value="Vertical"/>
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="VerticalGridLinesBrush" Value="#C6D7C5"/>
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="EnableColumnVirtualization" Value="False"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vc:CrudCC}" x:Name="Crud">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="OverridesDefaultStyle" Value="False"/>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Height" Value="18"/>
                            <Setter Property="Width" Value="110"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Path=(vc:CrudLookup.LookupWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ColumnDefinition Width="26" />
                                <ColumnDefinition Width="16" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" BorderThickness="1" Background="White" BorderBrush="Gray" Grid.Column="0" Grid.ColumnSpan="2" SnapsToDevicePixels="True">
                                <StackPanel Orientation="Horizontal">
                                    <TextBox x:Name="ContentHost" LostFocus="ContentHost_LostFocus" Initialized="ContentHost_Initialized" BorderBrush="Red"
                                             Width="{Binding Path=(vc:CrudLookup.LookupWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=SelectedModel}" />
                                    <Button x:Name="PART_Button" Template="{StaticResource ComboBoxToggleButton}" Height="18"  Focusable="False" Click="PART_Button_Click" />
                                </StackPanel>
                            </Border>
                            <Image x:Name="WarningImg" Grid.Column="2" Margin="2,0,0,0" Source="/RF.WinApp;component/Img/error.png" Width="14" Height="14" Visibility="Collapsed" />
                        </Grid>
                        <vc:AdornedPopup x:Name="aPopup">
                            <Border x:Name="calDatePopupBorder" BorderThickness="1" Background="White" BorderBrush="Gray" Margin="0,1,0,0"
                                            Width="Auto" MaxWidth="{TemplateBinding Width}" Height="Auto" MaxHeight="{TemplateBinding Height}">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1" />
                                                <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                                <Grid Grid.Column="1" Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                            <!--</Canvas>-->
                        </vc:AdornedPopup>
                        <Canvas x:Name="FPopup">
                            <vc:FilterBlockCC Background="#FF688CAF" 
                                                 DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}, Path=SelectedItem}"
                                                 x:Name="PART_FilterBlockCC" 
                                                 Width="{TemplateBinding FilterBlockWidth}" 
                                                 Height="{TemplateBinding FilterBlockHeight}" Visibility="Hidden"
                                                 BlockCaption="Фильтр" ApplyCaption="Применить" ClearCaption="Очистить">
                                <ContentPresenter ContentSource="Filter" />
                            </vc:FilterBlockCC>
                        </Canvas>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="Visibility" Value="Collapsed" SourceName="calDatePopup">
                            <Setter Property="vc:CrudCC.IsBindable" Value="False" />
                        </Trigger>-->
                        <Trigger Property="IsShow" Value="false" SourceName="aPopup">
                            <Setter Property="vc:CrudCC.IsBindable" Value="False" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Red" />
                            <Setter TargetName="WarningImg" Property="Visibility" Value="Visible" />
                            <Setter TargetName="WarningImg" Property="ToolTip" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.Errors)[0].ErrorContent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>