<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" requirePermission="false"/>
    <section name="modules" type="Microsoft.Practices.Prism.Modularity.ModulesConfigurationSection, Microsoft.Practices.Prism"/>
    <section name="rf.oauth" type="RF.Sts.Auth.Configuration.OAuthConfiguration, RF.Sts.Auth"/>
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
  <rf.oauth>
    <!--<sts url="http://ipv4.fiddler:333/api/basic/issue/" />-->
    <!--<sts url="http://localhost:333/api/basic/issue/" />-->
    <!--<sts url="http://npf-srv-ts2:555/sts/issue/" />
    <service realm="http://npf-srv-ts2:555/svc/" />-->
    <sts url="http://localhost:555/sts/issue/" />
    <service realm="http://localhost:555/svc/" />
    <client tokensstore="RF.Sts.Auth.FileTokensStoreProvider, RF.Sts.Auth" formsauth=".STSAUTH" wcfds="RF.WcfDS.OAuth.ClientDrivenBehavior, RF.WcfDS.OAuth" />
    <!--<client tokensstore="RF.Sts.Auth.InMemoryTokensStoreProvider, RF.Sts.Auth" formsauth=".STSAUTH" wcfds="RF.WcfDS.OAuth.ClientDrivenBehavior, RF.WcfDS.OAuth" />-->
  </rf.oauth>
  <unity>
    <typeAliases>
      <!--<typeAlias alias="PerWebRequest" type="Ms.Unity._2.UnityPerWebRequestLifetimeManager, Ms.Unity.2"/>-->
      <typeAlias alias="AssetsEFCtx" type="EF.AssetsEFCtx, RF.Assets.BL.EF" />
      
      <typeAlias alias="WebApiCtx" type="WebApi.Svc.WebApiCtx, WebApi" />
      <typeAlias alias="Model2DtoMapper" type="RF.BL.WebApi.Mapping.Model2DtoMapper, RF.Assets.BL.WebApi" />
      <typeAlias alias="ITransactionLauncher" type="RF.Common.Transactions.ITransactionLauncher, RF.Common"/>
      <typeAlias alias="IPersonRepository" type="RF.BL.IPersonRepository, RF.BL"/>
      <typeAlias alias="IGovernorRepository" type="RF.BL.IGovernorRepository, RF.Assets.BL"/>
      <typeAlias alias="IWorkcalendarRepository" type="RF.BL.IWorkcalendarRepository, RF.Assets.BL"/>
      <typeAlias alias="IAssetsRepository" type="RF.BL.IAssetsRepository, RF.Assets.BL"/>

      <typeAlias alias="IUISettingsTypeAssistant" type="RF.WinApp.Infrastructure.UIS.IUISettingsTypeAssistant, RF.WinApp.Infrastructure"/>
      <typeAlias alias="IUISettingsStoreProviderAgent" type="RF.WinApp.Infrastructure.UIS.IUISettingsStoreProviderAgent, RF.WinApp.Infrastructure"/>
      
    </typeAliases>
    <containers>
      <container>
        <types>
          <type type="AssetsEFCtx">
            <lifetime type="ContainerControlledLifetimeManager" />
          </type>
          <type type="WebApiCtx">
            <lifetime type="ContainerControlledLifetimeManager" />
            <constructor/>
          </type>
          <type type="Model2DtoMapper">
            <lifetime type="ContainerControlledLifetimeManager" />
          </type>          
          
          
          <type type="IPersonRepository" mapTo="RF.BL.EF.Repositories.PersonRepository, RF.BL.EF"/>

          <type type="IUISettingsTypeAssistant" mapTo="RF.WinApp.UISettingsAssistantShellwindow, RF.WinApp" name="Shellwindow" />
          <type type="IUISettingsTypeAssistant" mapTo="RF.WinApp.Infrastructure.UIS.UISAssistantRadioMenu, RF.WinApp.Infrastructure" name="RadioMenu" />
          <type type="IUISettingsStoreProviderAgent" mapTo="RF.WinApp.Infrastructure.UIS.UISettingsStoreInBinaryFile, RF.WinApp.Infrastructure"/>

          <!--<type type="ITransactionLauncher" mapTo="EF.EFImplicitTransactionLauncher, RF.Assets.BL.EF"/>
          <type type="IGovernorRepository" mapTo="RF.BL.EF.GovernorRepository, RF.Assets.BL.EF"/>
          <type type="IWorkcalendarRepository" mapTo="RF.BL.EF.WorkcalendarRepository, RF.Assets.BL.EF"/>
          <type type="IAssetsRepository" mapTo="RF.BL.EF.AssetsRepository, RF.Assets.BL.EF"/>-->

          <type type="ITransactionLauncher" mapTo="EF.TransactionLauncher, EF"/>
          <type type="IGovernorRepository" mapTo="RF.Assets.BL.WebApi.GovernorRepository, RF.Assets.BL.WebApi" />
          <type type="IWorkcalendarRepository" mapTo="RF.Assets.BL.WebApi.WorkcalendarRepository, RF.Assets.BL.WebApi"/>
          <type type="IAssetsRepository" mapTo="RF.Assets.BL.WebApi.AssetsRepository, RF.Assets.BL.WebApi"/>
        </types>
      </container>
    </containers>
  </unity>
  <modules>
    <module assemblyFile="RF.WinApp.Assets.dll" moduleType="RF.WinApp.Assets.AssetsModule, RF.WinApp.Assets, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" moduleName="AssetsModule" startupLoaded="true" />
    <module assemblyFile="RF.WinApp.Themes.T1.dll" moduleType="RF.WinApp.Themes.T1.ThemeT1Module, RF.WinApp.Themes.T1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" moduleName="ThemeT1Module" startupLoaded="true" />
    <module assemblyFile="RF.WinApp.Geo.dll" moduleType="RF.WinApp.Geo.GeoModule, RF.WinApp.Geo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" moduleName="GeoModule" startupLoaded="true" />
  <module assemblyFile="Safmar.Agent.dll" moduleType="Safmar.Agent.AgentModule, Safmar.Agent, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" moduleName="AgentModule" startupLoaded="true" />
  </modules>
  <connectionStrings>
    <add name="MainDb3" providerName="System.Data.SqlClient" connectionString="Initial Catalog=FundDb;Data Source=npf-srv-db1; Integrated Security=True"  />
    <add name="MainDb" providerName="System.Data.SqlClient" connectionString="Initial Catalog=FundDb;Data Source=npf-srv-db1;User Id=RfAspNet;Password=Temp123"  />
    <add name="MainDb2" providerName="System.Data.SqlClient" connectionString="Initial Catalog=FundDbMin;Data Source=npf-srv-db1.moscow.regionfund.ru; Integrated Security=True"  />
    <!--<add name="MainDb2" providerName="System.Data.SqlClient" connectionString="Initial Catalog=FundDb;Data Source=npf-srv-db1; Integrated Security=True"  />-->
    <add name="OPS" providerName="System.Data.SqlClient" connectionString="Initial Catalog=OPS;Data Source=npf-srv-db1.moscow.regionfund.ru; Integrated Security=True"  />
  </connectionStrings>

</configuration>
